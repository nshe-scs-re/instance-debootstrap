#!/bin/bash

if [ -z "$TARGET" -o ! -d "$TARGET" ]; then
  echo "Missing target directory"
  exit 1
fi

if [ ! -d "$TARGET/etc/network" ]; then
  echo "Missing target network directory"
  exit 1
fi

if [ -z "$NIC_COUNT" ]; then
  echo "Missing NIC COUNT"
  exit 1
fi

if [ "${OSP_ROLE}" = "lab_router" ]; then

cat >> $TARGET/etc/network/interfaces <<EOF
# Add entry for second NIC
auto eth1
iface eth1 inet static
  address 192.168.1.1/24
  post-up sysctl -w net.ipv4.ip_forward=1
  post-up iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
  post-up iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
  post-up iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT

auto eth2
iface eth2 inet static
  address 192.168.2.1/24
  post-up iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
  post-up iptables -A FORWARD -i eth0 -o eth2 -m state --state RELATED,ESTABLISHED -j ACCEPT
  post-up iptables -A FORWARD -i eth2 -o eth0 -j ACCEPT


EOF

#Setup dnsmasq for the Router
chroot "$TARGET" /usr/bin/env DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install dnsmasq 2> /dev/null
chroot "$TARGET" /usr/bin/env DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install wireshark 2> /dev/null
chroot "$TARGET" /usr/bin/env DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install nginx 2> /dev/null
cp /etc/ganeti/instance-debootstrap/hooks/files/lab1/dnsmasq.conf ${TARGET}/etc/
chroot "$TARGET" mkdir /srv/tftp

echo "192.168.1.1	${INSTANCE_NAME}" >> ${TARGET}/etc/hosts

fi

echo "Lab router hook done"

exit 0
